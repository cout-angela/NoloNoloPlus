{"version":3,"sources":["components/Button.js","logo.png","components/NavCollapse.js","components/Navbar.js","components/ListingCard.js","components/Store.js","components/Rentals.js","errHandler.js","components/Profile.js","components/Login.js","components/Register.js","components/LoginOrRegister.js","App.js","reportWebVitals.js","index.js"],"names":["Button","btnId","onClick","className","text","id","NavCollapse","isLogged","role","data-bs-toggle","data-bs-target","type","aria-controls","aria-selected","placeholder","aria-label","Navbar","href","src","logo","alt","aria-expanded","ListingCard","l","key","cheapest","i","products","length","price","base","name","listings","_id","disabled","description","brand","company","fidelity","maintenance","condition","Store","aria-labelledby","map","listing","Rentals","handle","stuff","command","window","location","msg","console","log","Profile","customer","updateCustomer","useNavigate","useState","isReadonly","setReadonly","wrongPassword","setWrongPassword","samePassword","setSamePassword","usedUsername","setUsedUsername","e","a","preventDefault","fetch","method","reload","avatar","username","surname","form","setForm","loadAvatar","img","data","FormData","append","axios","post","imgString","updateForm","value","prev","updatedCustomer","headers","body","JSON","stringify","then","response","json","answer","alert","delete","catch","error","useEffect","oldPassword","newPassword","passForm","setPassForm","updatePassForm","passwords","onSubmit","class","htmlFor","onChange","target","files","readOnly","defaultValue","tabindex","aria-hidden","data-bs-dismiss","Login","password","required","Register","show","setShow","newCustomer","Toast","onClose","autohide","Header","Body","LoginOrRegister","App","setisLogged","setCustomer","res","checkLogin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAmBeA,EAjBA,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAC3C,OACE,wBACEC,GAAIJ,EACJC,QAASA,EACTC,UAAWA,EAHb,SAKGC,KCTQ,MAA0B,iCCuC1BE,EAnCK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,OACI,sBAAKJ,UAAU,2CAA2CE,GAAG,yBAA7D,UACE,qBAAKF,UAAU,iEAAf,SACE,sBAAKA,UAAU,yGACbE,GAAG,UAAUG,KAAK,UADpB,UAEI,wBAAQL,UAAU,qCAAqCE,GAAG,gBAAgBI,iBAAe,MACvFC,iBAAe,aAAaC,KAAK,SAASH,KAAK,MAAMI,gBAAc,YACnEC,gBAAc,OAFhB,mBAGCN,EAAY,wBAAQJ,UAAU,8BAA8BE,GAAG,kBAAkBI,iBAAe,MACjGC,iBAAe,eAAeC,KAAK,SAASH,KAAK,MAAMI,gBAAc,cACrEC,gBAAc,QAFD,wBAE+B,wBAAQV,UAAU,uCAAuCE,GAAG,kBAAkBI,iBAAe,MACzIC,iBAAe,eAAeC,KAAK,SAASH,KAAK,MAAMI,gBAAc,cACrEC,gBAAc,QAF8B,wBAG3CN,EAAY,wBAAQJ,UAAU,8BAA8BE,GAAG,kBAAkBI,iBAAe,MACjGC,iBAAe,eAAeC,KAAK,SAASH,KAAK,MAAMI,gBAAc,cACrEC,gBAAc,QAFD,qBAE8B,wBAAQV,UAAU,uCAAuCE,GAAG,kBAAkBI,iBAAe,MACxIC,iBAAe,eAAeC,KAAK,SAASH,KAAK,MAAMI,gBAAc,cACrEC,gBAAc,QAF6B,sBAGzCN,GAAY,wBAAQJ,UAAU,8BAA8BE,GAAG,gBAAgBI,iBAAe,MAChGC,iBAAe,aAAaC,KAAK,SAASH,KAAK,MAAMI,gBAAc,YACnEC,gBAAc,QAFA,oCAMpB,qBAAKV,UAAU,wFAAf,SACE,uBAAMA,UAAU,qCAAhB,UACE,uBAAOE,GAAG,cAAcF,UAAU,oBAAoBQ,KAAK,SAASG,YAAY,SAASC,aAAW,WACpG,cAAC,EAAD,CAAQd,MAAM,YAAYE,UAAU,iDAAiDC,KAAK,oBCDzFY,EA1BA,SAAC,GAAgB,IAAfT,EAAc,EAAdA,SAEf,OAEE,cADA,CACA,OAAKJ,UAAU,mGAAf,UACE,qBAAKA,UAAU,QAAf,SACE,mBAAGA,UAAU,+BAA+Bc,KAAK,IAAjD,SACE,qBAAKC,IAAKC,EAAMC,IAAI,oBAAoBjB,UAAU,YAGtD,wBAAQA,UAAU,iBAAiBQ,KAAK,SAASF,iBAAe,WAAWC,iBAAe,0BAA0BE,gBAAc,yBAAyBS,gBAAc,QAAQN,aAAW,oBAA5L,SACE,sBAAMZ,UAAU,0BAElB,cAAC,EAAD,CAAaI,SAAYA,QCShBe,EAzBK,SAAC,EAAD,GAEhB,IAFkC,IAAhBC,EAAe,EAAfA,EAAKC,EAAU,EAAVA,IACnBC,EAAW,EACNC,EAAI,EAAGA,EAAIH,EAAEI,SAASC,OAAQF,IAC/BH,EAAEI,SAASD,GAAGG,MAAMC,KAAOP,EAAEI,SAASF,GAAUI,MAAMC,OACtDL,EAAWC,GAGnB,OAGY,qBAAIvB,UAAU,2BAAqCE,GAAG,GAAtD,UACA,sBAAKF,UAAU,wCAAf,UACI,sBAAMA,UAAU,uEAAhB,sBACI,qBAAKiB,IAAI,cAAcjB,UAAU,yBAEzC,sBAAKA,UAAU,qBAAf,UACI,mBAAGA,UAAU,+BAAb,SAA6CoB,EAAEQ,OAC/C,mBAAG5B,UAAU,QAAb,SAAsBoB,EAAEI,SAASF,GAAUI,MAAMC,OACjD,uDAR0CN,ICV1DQ,EAAW,CACZ,CACCC,IAAI,IACJC,UAAU,EACVH,KAAM,QACNI,YAAa,OACbxB,KAAM,MACNyB,MAAO,MACPC,QAAS,OACTV,SAAU,CACN,CACIE,MAAO,CACHC,KAAM,GACNQ,SAAU,GAEdJ,UAAU,EACVK,YAAa,GACbC,UAAW,SAInB,CACIP,IAAI,IACJC,UAAU,EACVH,KAAM,QACNI,YAAa,OACbxB,KAAM,MACNyB,MAAO,MACPC,QAAS,OACTV,SAAU,CACN,CACIE,MAAO,CACHC,KAAM,GACNQ,SAAU,GAEdJ,UAAU,EACVK,YAAa,GACbC,UAAW,SAInB,CACIP,IAAI,IACJC,UAAU,EACVH,KAAM,OACNI,YAAa,QACbxB,KAAM,OACNyB,MAAO,OACPC,QAAS,QACTV,SAAU,CACN,CACIE,MAAO,CACHC,KAAM,EACNQ,SAAU,GAEdJ,UAAU,EACVK,YAAa,GACbC,UAAW,SAInB,CACIP,IAAI,IACJC,UAAU,EACVH,KAAM,MACNI,YAAa,OACbxB,KAAM,MACNyB,MAAO,MACPC,QAAS,OACTV,SAAU,CACN,CACIE,MAAO,CACHC,KAAM,GACNQ,SAAU,GAEdJ,UAAU,EACVK,YAAa,GACbC,UAAW,UAmBpBC,EAdD,WACV,OACI,qBAAKtC,UAAU,4BAA4BE,GAAG,YAAYG,KAAK,WAAWkC,kBAAgB,gBAA1F,SACI,oBAAIvC,UAAU,yDAAyDE,GAAG,oBAA1E,SACC2B,EAASW,KAAI,SAACC,GAAD,OAEN,cAAC,EAAD,CAAarB,EAAGqB,GAAcA,EAAQX,aChF3CY,EARC,WACZ,OACI,qBAAK1C,UAAU,gBAAgBE,GAAG,cAAcG,KAAK,WAAWkC,kBAAgB,kBAAhF,SACI,+C,cCLL,SAASI,EAAOC,GACnB,OAAQA,EAAMC,SACV,IAAK,WAED,OADAC,OAAOC,SAASjC,KAAO8B,EAAMI,IACtB,KAEX,IAAK,aAED,OADAC,QAAQC,IAAI,2BACLN,EAEX,IAAK,SAED,OADAK,QAAQC,IAAIN,EAAMI,KACX,KACX,IAAK,YACD,OAAOJ,EAAMI,IAEjB,QAEI,OADAC,QAAQC,IAAIN,GACL,M,qBCwSJO,EArTC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eAAqB,GAC7BC,cACiBC,oBAAS,IAFG,mBAEvCC,EAFuC,KAE3BC,EAF2B,OAGJF,oBAAS,GAHL,mBAGvCG,EAHuC,KAGxBC,EAHwB,OAINJ,oBAAS,GAJH,mBAIvCK,EAJuC,KAIzBC,EAJyB,OAKNN,oBAAS,GALH,mBAKvCO,EALuC,KAKzBC,EALyB,iDAW9C,WAAsBC,GAAtB,SAAAC,EAAA,6DACID,EAAEE,iBADN,SAEUC,MAAM,uBAAwB,CAChCC,OAAQ,WAHhB,OAKItB,OAAOC,SAASsB,QAAO,GAL3B,4CAX8C,4BAwBtBd,mBAAS,CAC7Be,OAAQ,GACRC,SAAU,GACV3C,KAAM,GACN4C,QAAS,KA5BiC,mBAwBvCC,EAxBuC,KAwBjCC,EAxBiC,cAgC/BC,EAhC+B,8EAgC9C,WAA0BC,GAA1B,mBAAAX,EAAA,yDAEQY,EAAO,IAAIC,SACVF,EAHT,yCAGqB3B,QAAQC,IAAI,cAHjC,OAII,IAAS3B,EAAI,EAAGA,EAAIqD,EAAInD,OAAQF,IAC5BsD,EAAKE,OAAO,OAAQH,EAAIrD,IALhC,gBAS0ByD,IAAMC,KAAK,mBAAoBJ,EAAM,IAT/D,cASQK,EATR,yBAUYA,EAAUL,KAAK,IAV3B,4CAhC8C,sBA6C9C,SAASM,EAAWC,GAChB,OAAOV,GAAQ,SAACW,GACZ,OAAO,2BAAKA,GAASD,MA/CiB,4CAyD9C,WAA2BpB,GAA3B,eAAAC,EAAA,6DACID,EAAEE,iBAGIoB,EAJV,eAIiCb,GAJjC,SAMUN,MAAM,uBAAwB,CAChCC,OAAQ,OACRmB,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUJ,KAEpBK,KAPC,uCAOI,WAAMC,GAAN,iBAAA3B,EAAA,sEACe2B,EAASC,OADxB,OACEhB,EADF,OAGqB,gBADnBiB,EAASnD,EAAOkC,IACThC,SACY,WAAfiD,EAAO9C,MACP+C,MAAM,wBACNjD,OAAOC,SAASsB,QAAO,IAER,yBAAfyB,EAAO9C,KACPe,GAAgB,IAGF,cAAX+B,EACPhD,OAAOC,SAASsB,QAAO,IAGnBjB,EAASkB,QAAQU,IAAMgB,OAAO,aAAe5C,EAASkB,OAAQ,GAAI,IACtEjB,EAAeyC,GACfpB,EAAQ,CAAEH,SAAUnB,EAASmB,SAAU3C,KAAMwB,EAASxB,KAAM4C,QAASpB,EAASoB,QAASF,OAAQlB,EAASkB,SACxGb,GAAY,IAnBd,2CAPJ,uDAmCDwC,OAAM,SAACC,GACJvD,EAAOuD,MA1CnB,4CAzD8C,sBAkD9CC,qBAAU,WAENzB,EAAQ,CAAEH,SAAUnB,EAASmB,SAAU3C,KAAMwB,EAASxB,KAAM4C,QAASpB,EAASoB,QAASF,OAAQlB,EAASkB,WAEzG,CAAClB,IAtD0C,MA2GdG,mBAAS,CACrC6C,YAAa,GACbC,YAAa,KA7G6B,mBA2GvCC,EA3GuC,KA2G7BC,EA3G6B,KAiH9C,SAASC,EAAepB,GACpB,OAAOmB,GAAY,SAAClB,GAChB,OAAO,2BAAKA,GAASD,MAnHiB,4CAuH9C,WAA8BpB,GAA9B,eAAAC,EAAA,6DACID,EAAEE,iBAGIuC,EAJV,eAI2BH,GAJ3B,SAMUnC,MAAM,+BAAgC,CACxCC,OAAQ,OACRmB,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUe,KAEpBd,KAPC,uCAOI,WAAMC,GAAN,iBAAA3B,EAAA,sEACe2B,EAASC,OADxB,OACEhB,EADF,OAGqB,gBADnBiB,EAASnD,EAAOkC,IACThC,SACY,WAAfiD,EAAO9C,MACP+C,MAAM,wBACNjD,OAAOC,SAASsB,QAAO,IAER,aAAfyB,EAAO9C,MACPa,GAAgB,GAChBF,GAAiB,GACjB4C,EAAY,CAAEH,YAAa,GAAIC,YAAa,MAC3B,cAAfP,EAAO9C,MACTa,GAAgB,GAChBF,GAAiB,GACjB4C,EAAY,CAAEH,YAAa,GAAIC,YAAa,OAIhDvD,OAAOC,SAASsB,QAAO,GAnBzB,2CAPJ,uDAsCD4B,OAAM,SAACC,GACJvD,EAAOuD,MA7CnB,OA+CIzC,GAAY,GA/ChB,4CAvH8C,sBAyK9C,OAEI,qCACI,sBAAKzD,UAAU,gBAAgBE,GAAG,cAAcG,KAAK,WAAWkC,kBAAgB,kBAAhF,UACI,qBAAKvC,UAAU,4BAAf,SACI,qBAAKA,UAAU,iCAAf,SACI,wBAAQA,UAAU,iDAAiDD,QA/KzC,4CA+K1B,yBAGR,uBAAMG,GAAG,cAAcwG,SAlLW,4CAkLY1G,UAAU,qBAAxD,UACI,qBAAK2G,MAAM,8BAAX,SACI,qBAAK5F,IAAK,aAAe0D,EAAKH,OAAQrD,IAAI,SAASjB,UAAU,gBAEjE,sBAAKA,UAAU,mDAAf,UACI,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,mCAAf,UACMwD,GAAc,uBAAOoD,QAAQ,kBAAkB5G,UAAU,mBAA3C,sBAEpB,sBAAKA,UAAU,QAAf,WACMwD,GAAc,uBACZhD,KAAK,OACLR,UAAU,eACVE,GAAG,kBACH2G,SAAQ,uCAAE,WAAO7C,GAAP,SAAAC,EAAA,kEAAakB,EAAb,SAAwCR,EAAWX,EAAE8C,OAAOC,OAA5D,gCAA0BzC,OAA1B,mFAAF,yDAEVd,GAAc,uEACfM,GAAgB,mBAAG9D,UAAU,qBAAb,2CAGzB,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,mCAAf,SACI,uBAAO4G,QAAQ,oBAAoB5G,UAAU,mBAA7C,wBAEJ,sBAAKA,UAAU,QAAf,UACI,uBACIQ,KAAK,OACLwG,WAAUxD,EACVxD,UAAU,eACVE,GAAG,oBACHkF,MAAOX,EAAKF,SACZsC,SAAU,SAAC7C,GAAD,OAAOmB,EAAW,CAAEZ,SAAUP,EAAE8C,OAAO1B,YAEnD5B,GAAc,uEACfM,GAAgB,mBAAG9D,UAAU,qBAAb,2CAGzB,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,mCAAf,SACI,uBAAO4G,QAAQ,gBAAgB5G,UAAU,mBAAzC,oBAEJ,qBAAKA,UAAU,QAAf,SACI,uBACIQ,KAAK,OACLwG,WAAUxD,EACVxD,UAAU,eACVE,GAAG,gBACHkF,MAAOX,EAAK7C,KACZiF,SAAU,SAAC7C,GAAD,OAAOmB,EAAW,CAAEvD,KAAMoC,EAAE8C,OAAO1B,gBAIzD,sBAAKpF,UAAU,WAAf,UACI,qBAAKA,UAAU,mCAAf,SACI,uBAAO4G,QAAQ,mBAAmB5G,UAAU,mBAA5C,uBAEJ,qBAAKA,UAAU,QAAf,SACI,uBACIQ,KAAK,OACLwG,WAAUxD,EACVxD,UAAU,eACVE,GAAG,mBACHkF,MAAOX,EAAKD,QACZqC,SAAU,SAAC7C,GAAD,OAAOmB,EAAW,CAAEX,QAASR,EAAE8C,OAAO1B,gBAI5D,sBAAKpF,UAAU,WAAf,UACI,qBAAKA,UAAU,mCAAf,SACI,uBAAO4G,QAAQ,oBAAoB5G,UAAU,mBAA7C,wBAEJ,qBAAKA,UAAU,QAAf,SACI,uBAAOQ,KAAK,OAAOwG,UAAQ,EAAChH,UAAU,eAAeE,GAAG,oBAAoB+G,aAAa,+BAE7F,qBAAKjH,UAAU,QAAf,UACMwD,GAAc,wBAAQxD,UAAU,oDAAoDE,GAAG,0BAA0BI,iBAAe,QAAQC,iBAAe,uBAAzI,uCAI5B,qBAAKP,UAAU,kCAAf,SACI,sBAAKA,UAAU,sCAAf,UACI,wBAAQQ,KAAK,SAASR,UAAU,yDAAyDE,GAAG,kBAAkBH,QAlP1I,WACI0D,GAAaD,GACbkB,EAAQ,CAACJ,OAAQlB,EAASkB,UAgPF,qBACEd,GAAc,wBAAQxD,UAAU,yDAAyDE,GAAG,kBAAkBM,KAAK,SAArG,kCAOpC,qBAAKR,UAAU,aAAaE,GAAG,sBAAsBgH,SAAS,KAAK3E,kBAAgB,oBAAoB4E,cAAY,OAAnH,SACI,qBAAKnH,UAAU,qCAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,oBAAIA,UAAU,iDAAiDE,GAAG,oBAAlE,kCACA,mBAAGF,UAAU,oBAAb,uFAEJ,uBAAME,GAAG,eAAewG,SAnRE,4CAmR1B,UACI,sBAAK1G,UAAU,aAAf,UACI,uBAAO4G,QAAQ,cAAc5G,UAAU,mBAAvC,0BACA,uBACIQ,KAAK,WACLR,UAAU,eACVE,GAAG,cACH+G,aAAcX,EAASF,YACvBS,SAAU,SAAC7C,GAAD,OAAOwC,EAAe,CAAEJ,YAAapC,EAAE8C,OAAO1B,WAE3D1B,GAAiB,mBAAG1D,UAAU,qBAAb,gCAClB,uBAAO4G,QAAQ,cAAc5G,UAAU,mBAAvC,0BACA,uBACIQ,KAAK,WACLR,UAAU,eACVE,GAAG,cACH+G,aAAcX,EAASD,YACvBQ,SAAU,SAAC7C,GAAD,OAAOwC,EAAe,CAAEH,YAAarC,EAAE8C,OAAO1B,WAE3DxB,GAAgB,mBAAG5D,UAAU,qBAAb,mEAErB,sBAAKA,UAAU,eAAf,UACI,wBAAQQ,KAAK,SAASR,UAAU,oBAAoBoH,kBAAgB,QAApE,mBACA,wBAAQ5G,KAAK,SAASR,UAAU,iDAAhC,2CC5NjBqH,EA9ED,WAAO,IAAD,EACQ9D,mBAAS,CAC7BgB,SAAU,GACV+C,SAAU,KAHE,mBACT7C,EADS,KACHC,EADG,KAKGpB,cACjB,SAAS6B,EAAWC,GAClB,OAAOV,GAAQ,SAACW,GACd,OAAO,2BAAKA,GAASD,MARX,4CAWd,WAAwBpB,GAAxB,eAAAC,EAAA,6DACAD,EAAEE,iBAEMd,EAHR,eAGwBqB,GAHxB,SAIQN,MAAM,sBAAuB,CACjCC,OAAQ,OACRmB,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUtC,KAEtBuC,MAAK,SAAAC,GACJ3C,QAAQC,IAAI,wBACZD,QAAQC,IAAI0C,EAASC,WAEtBI,OAAM,SAACC,GACNvD,EAAOuD,MAhBX,OAmBExB,EAAQ,CAACH,SAAU,GAAI+C,SAAU,KAEjCxE,OAAOC,SAASsB,QAAO,GArBzB,4CAXc,sBAoChB,OACI,qBAAKrE,UAAU,oCAAf,SACI,sBAAKA,UAAU,kCAAf,UACI,qBAAKA,UAAU,uCAAf,SACI,yCAEJ,qBAAKA,UAAU,uCAAf,SACI,uBAAME,GAAG,UAAUwG,SA3CnB,4CA2CA,UACI,gCACI,uBAAO1G,UAAU,aAAa4G,QAAQ,cAAtC,sBACA,uBACI5G,UAAU,eACVQ,KAAK,OACLN,GAAG,cACH0B,KAAK,WACLwD,MAAOX,EAAKF,SACZsC,SAAU,SAAC7C,GAAD,OAAOmB,EAAW,CAAEZ,SAAUP,EAAE8C,OAAO1B,SACjDmC,UAAQ,OAGhB,gCACI,uBAAOvH,UAAU,aAAa4G,QAAQ,cAAtC,sBACA,uBACI5G,UAAU,eACVQ,KAAK,WACLoB,KAAK,WACL1B,GAAG,cACHkF,MAAOX,EAAK6C,SACZT,SAAU,SAAC7C,GAAD,OAAOmB,EAAW,CAAEmC,SAAUtD,EAAE8C,OAAO1B,SACjDmC,UAAQ,OAGhB,qBAAKvH,UAAU,OAAf,SACI,wBAAQA,UAAU,kBAAkBQ,KAAK,SAAzC,gC,QCqDbgH,EA3HE,WAAO,IAAD,EACKjE,oBAAS,GADd,mBACZkE,EADY,KACNC,EADM,OAEKnE,mBAAS,CAC7Be,OAAQ,GACRC,SAAU,GACV3C,KAAM,GACN4C,QAAS,GACT8C,SAAU,KAPK,mBAEZ7C,EAFY,KAENC,EAFM,KAWjB,SAASS,EAAWC,GAClB,OAAOV,GAAQ,SAACW,GACd,OAAO,2BAAKA,GAASD,MAbR,4CAiBjB,WAAwBpB,GAAxB,eAAAC,EAAA,6DACED,EAAEE,iBAGIyD,EAJR,eAI2BlD,GAJ3B,SAMQN,MAAM,oBAAqB,CAC/BC,OAAQ,OACRmB,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUiC,KAEtBhC,MAAK,SAAAC,GACJA,EAASC,UAMVI,OAAM,SAACC,GACNvD,EAAOuD,MArBX,OAuBEwB,GAAQ,GACRhD,EAAQ,CAAEJ,OAAQ,GAAIC,SAAU,GAAI3C,KAAM,GAAI4C,QAAS,GAAI8C,SAAU,KAxBvE,4CAjBiB,sBA6CjB,OACI,qCACA,eAACM,EAAA,EAAD,CAAOH,KAAMA,EAAMI,QAAS,kBAAMH,GAAQ,IAAQI,UAAQ,EAA1D,UACQ,cAACF,EAAA,EAAMG,OAAP,UACE,wBAAQ/H,UAAU,UAAlB,4BAEJ,cAAC4H,EAAA,EAAMI,KAAP,uDAEA,qBAAKhI,UAAU,yBAAf,SAEI,qBAAKA,UAAU,wDAAf,SACI,sBAAKA,UAAU,kCAAf,UACI,qBAAKA,UAAU,uCAAf,SACI,4CAEJ,qBAAKA,UAAU,uCAAf,SACI,uBAAME,GAAG,UAAUwG,SA7D5B,4CA6DS,UACI,gCACI,uBAAO1G,UAAU,aAAa4G,QAAQ,WAAtC,+BACA,uBACI5G,UAAU,eACVQ,KAAK,OACLN,GAAG,WACH0B,KAAK,WACLwD,MAAOX,EAAKF,SACZsC,SAAU,SAAC7C,GAAD,OAAOmB,EAAW,CAAEZ,SAAUP,EAAE8C,OAAO1B,SACjDmC,UAAQ,OAGhB,gCACI,uBAAOvH,UAAU,aAAa4G,QAAQ,OAAtC,uBACA,uBACI5G,UAAU,eACVQ,KAAK,OACLN,GAAG,OACH0B,KAAK,OACLwD,MAAOX,EAAK7C,KACZiF,SAAU,SAAC7C,GAAD,OAAOmB,EAAW,CAAEvD,KAAMoC,EAAE8C,OAAO1B,SAC7CmC,UAAQ,OAGhB,gCACI,uBAAOvH,UAAU,aAAa4G,QAAQ,UAAtC,0BACA,uBACI5G,UAAU,eACVQ,KAAK,OACLN,GAAG,UACH0B,KAAK,UACLwD,MAAOX,EAAKD,QACZqC,SAAU,SAAC7C,GAAD,OAAOmB,EAAW,CAAEX,QAASR,EAAE8C,OAAO1B,SAChDmC,UAAQ,OAGhB,gCACI,uBAAOvH,UAAU,aAAa4G,QAAQ,WAAtC,sBACA,uBACI5G,UAAU,eACVQ,KAAK,WACLN,GAAG,WACH0B,KAAK,WACLwD,MAAOX,EAAK6C,SACZT,SAAU,SAAC7C,GAAD,OAAOmB,EAAW,CAAEmC,SAAUtD,EAAE8C,OAAO1B,SACjDmC,UAAQ,OAGhB,qBAAKvH,UAAU,OAAf,SACI,wBAAQA,UAAU,kBAAkBQ,KAAK,SAAzC,wCCrGzByH,EAVS,WAEpB,OACI,sBAAKjI,UAAU,gBAAgBE,GAAG,YAAYG,KAAK,WAAWkC,kBAAgB,gBAA9E,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCwCG2F,EAvCH,WAAO,IAAD,EAGiB3E,oBAAS,GAH1B,mBAGTnD,EAHS,KAGC+H,EAHD,OAIgB5E,mBAAS,IAJzB,mBAITH,EAJS,KAICgF,EAJD,KAMhBjC,qBAAU,YACQ,uCAAG,gCAAAlC,EAAA,sEACCE,MAAO,0BADR,cACXkE,EADW,gBAEEA,EAAIxC,OAFN,UAEXhB,EAFW,SAGbiB,EAASnD,EAAOkC,IAHH,oBAKQ,eAAnBiB,EAAOjD,QALI,0CAK+BkD,MAAMD,EAAO9C,MAL5C,QAMA,cAAX8C,IACFqC,GAAY,GACZC,EAAYtC,IARC,4CAAH,qDAYhBwC,KACC,IAIH,OACI,sBAAKtI,UAAU,wCAAf,UACE,cAAC,EAAD,CAAQI,SAAUA,IAClB,qBAAKF,GAAG,cAAcF,UAAU,4CAAhC,SACE,sBAAKA,UAAU,cAAcE,GAAG,iBAAhC,UACE,cAAC,EAAD,CAAOE,SAAUA,IAChBA,GAAY,cAAC,EAAD,IACZA,GAAY,cAAC,EAAD,CAASgD,SAAUA,EAAUC,eAV9B,SAACsE,GACrBS,EAAYT,OAUFvH,GAAY,cAAC,EAAD,aC9BXmI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCIdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7a944670.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ btnId, onClick, className, text }) => {\n  return (\n    <button\n      id={btnId}\n      onClick={onClick}\n      className={className}\n    >\n      {text}\n    </button>\n  )\n}\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nexport default Button\n","export default __webpack_public_path__ + \"static/media/logo.6da0c4f0.png\";","import React from 'react'\r\nimport Button from './Button'\r\n\r\n\r\nconst NavCollapse = ({isLogged}) => {\r\n    return (\r\n        <div className=\"col flex-column collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <nav className=\" nolonoloBackgroundNavSecond nolonoloFullWidth navTabContainer\">\r\n            <div className=\"nav nav-tabs justify-content-center pt-2 m-0 nolonoloBackgroundNavSecond nolonoloFullWidth flex-column\"\r\n              id=\"nav-tab\" role=\"tablist\">\r\n                <button className=\"nolonoloYellowText nav-link active\" id=\"nav-store-tab\" data-bs-toggle=\"tab\"\r\n                  data-bs-target=\"#nav-store\" type=\"button\" role=\"tab\" aria-controls=\"nav-store\"\r\n                  aria-selected=\"true\">Store</button>\r\n                {isLogged ? (<button className=\"nolonoloYellowText nav-link\" id=\"nav-rentals-tab\" data-bs-toggle=\"tab\"\r\n                data-bs-target=\"#nav-rentals\" type=\"button\" role=\"tab\" aria-controls=\"nav-rentals\"\r\n                aria-selected=\"false\">My Rentals</button>):(<button className=\"nolonoloYellowText nav-link disabled\" id=\"nav-rentals-tab\" data-bs-toggle=\"tab\"\r\n                data-bs-target=\"#nav-rentals\" type=\"button\" role=\"tab\" aria-controls=\"nav-rentals\"\r\n                aria-selected=\"false\">My Rentals</button>)}\r\n                {isLogged ? (<button className=\"nolonoloYellowText nav-link\" id=\"nav-profile-tab\" data-bs-toggle=\"tab\"\r\n                data-bs-target=\"#nav-profile\" type=\"button\" role=\"tab\" aria-controls=\"nav-profile\"\r\n                aria-selected=\"false\">Profile</button>) : (<button className=\"nolonoloYellowText nav-link disabled\" id=\"nav-profile-tab\" data-bs-toggle=\"tab\"\r\n                data-bs-target=\"#nav-profile\" type=\"button\" role=\"tab\" aria-controls=\"nav-profile\"\r\n                aria-selected=\"false\">Profile</button>)}\r\n                {!isLogged && <button className=\"nolonoloYellowText nav-link\" id=\"nav-login-tab\" data-bs-toggle=\"tab\"\r\n                data-bs-target=\"#nav-login\" type=\"button\" role=\"tab\" aria-controls=\"nav-login\"\r\n                aria-selected=\"false\">Login or register</button>}\r\n              \r\n            </div>\r\n          </nav>\r\n          <div className=\"nolonoloBackgroundNavSecond container-fluid justify-content-center searchBarContainer\">\r\n            <form className=\"d-flex mb-2 mt-2 nolonoloFullWidth\">\r\n              <input id=\"searchInput\" className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <Button btnId=\"searchBtn\" className=\"btn nolonoloWhiteText nolonoloYellowBackground\" text=\"Search\"/>\r\n            </form>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavCollapse\r\n","\nimport Button from './Button'\nimport logo from '../logo.png'\nimport NavCollapse from './NavCollapse'\n\nconst Navbar = ({isLogged}) => {\n\n  return (\n    //NAVBAR\n    <nav className=\"navbar navbar-expand-lg sticky-top navbar-dark nolonoloFullWidth nolonoloBackgroundNavSecond p-2\">\n      <div className=\"col-1\">\n        <a className=\"navbar-brand nolonoloNavLogo\" href=\"#\">\n          <img src={logo} alt=\"nolonoloplus logo\" className=\"p-0\" />\n        </a>\n      </div>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <NavCollapse isLogged = {isLogged}/>\n        \n\n    </nav>\n  )\n}\n\n// CSS in JS\n// const headingStyle = {\n//   color: 'red',\n//   backgroundColor: 'black',\n// }\n\nexport default Navbar\n","import React from 'react'\r\n\r\nconst ListingCard = ({l}, {key} ) => {\r\n    var cheapest = 0;\r\n    for (var i = 1; i < l.products.length; i++) {\r\n        if (l.products[i].price.base < l.products[cheapest].price.base) {\r\n            cheapest = i;\r\n        }\r\n    }\r\n    return (\r\n        \r\n      \r\n                <li className=\"card list-group-item p-0\" key={key} id=\"\"> \r\n                <div className=\"container m-0 p-0 listingImgContainer\">\r\n                    <span className=\"badge bg-secondary isDisabled nolonoloFullWidth listingDisabledBadge\">DISABLED</span>\r\n                        <img alt=\"Product Img\" className=\"nolonoloFullWidth\" />\r\n                </div>\r\n                <div className=\"flex-column d-flex\">\r\n                    <p className=\"listingName nolonoloBoldText\">{l.name}</p>\r\n                    <p className=\"price\">{l.products[cheapest].price.base}</p>                \r\n                    <button>Open Listing</button>\r\n                </div>\r\n                </li>\r\n\r\n    )\r\n}\r\n\r\nexport default ListingCard\r\n","import React from 'react'\r\nimport ListingCard from './ListingCard'\r\nvar listings = [\r\n   { \r\n    _id:123,\r\n    disabled: false,\r\n    name: 'Catto',\r\n    description: 'cats',\r\n    type: 'cat',\r\n    brand: 'cat',\r\n    company: 'cats',\r\n    products: [\r\n        {\r\n            price: {\r\n                base: 20,\r\n                fidelity: 2,\r\n            },\r\n            disabled: false,\r\n            maintenance: '',\r\n            condition: 'new' \r\n        }\r\n    ]\r\n    },\r\n    { \r\n        _id:124,\r\n        disabled: false,\r\n        name: 'Doggo',\r\n        description: 'dogs',\r\n        type: 'dog',\r\n        brand: 'dog',\r\n        company: 'dogs',\r\n        products: [\r\n            {\r\n                price: {\r\n                    base: 10,\r\n                    fidelity: 1,\r\n                },\r\n                disabled: false,\r\n                maintenance: '',\r\n                condition: 'new' \r\n            }\r\n        ]\r\n        },\r\n        { \r\n            _id:125,\r\n            disabled: false,\r\n            name: 'Snek',\r\n            description: 'sneks',\r\n            type: 'snek',\r\n            brand: 'snek',\r\n            company: 'sneks',\r\n            products: [\r\n                {\r\n                    price: {\r\n                        base: 5,\r\n                        fidelity: 1,\r\n                    },\r\n                    disabled: false,\r\n                    maintenance: '',\r\n                    condition: 'new' \r\n                }\r\n            ]\r\n            },\r\n            { \r\n                _id:126,\r\n                disabled: false,\r\n                name: 'Moo',\r\n                description: 'moos',\r\n                type: 'moo',\r\n                brand: 'moo',\r\n                company: 'moos',\r\n                products: [\r\n                    {\r\n                        price: {\r\n                            base: 12,\r\n                            fidelity: 3,\r\n                        },\r\n                        disabled: false,\r\n                        maintenance: '',\r\n                        condition: 'new' \r\n                    }\r\n                ]\r\n                }\r\n]\r\nconst Store = () => {\r\n    return (\r\n        <div className=\"tab-pane fade show active\" id=\"nav-store\" role=\"tabpanel\" aria-labelledby=\"nav-store-tab\">\r\n            <ul className=\"list-group d-flex align-items-center nolonoloFullWidth\" id=\"listingsContainer\">\r\n            {listings.map((listing) => (\r\n                \r\n                    <ListingCard l={listing} key={listing._id}/>\r\n                ))}\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Store\r\n","import React from 'react'\r\n\r\nconst Rentals = () => {\r\n    return (\r\n        <div className=\"tab-pane fade\" id=\"nav-rentals\" role=\"tabpanel\" aria-labelledby=\"nav-rentals-tab\">\r\n            <h1>My rentals</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rentals\r\n","export function handle(stuff){\r\n    switch (stuff.command){\r\n        case 'redirect':\r\n            window.location.href = stuff.msg;\r\n            return null;\r\n            break;\r\n        case 'displayErr':\r\n            console.log('in displayErr in handle')\r\n            return stuff;\r\n            break;\r\n        case 'logErr':\r\n            console.log(stuff.msg);\r\n            return null;\r\n        case 'noCommand':\r\n            return stuff.msg;\r\n            break;\r\n        default:\r\n            console.log(stuff);\r\n            return null;\r\n            break;\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from \"react-router\";\r\nimport { handle } from './../errHandler';\r\nimport axios from 'axios';\r\n\r\nconst Profile = ({ customer, updateCustomer }) => {\r\n    const navigate = useNavigate();\r\n    const [isReadonly, setReadonly] = useState(true);\r\n    const [wrongPassword, setWrongPassword] = useState(false);\r\n    const [samePassword, setSamePassword] = useState(false);\r\n    const [usedUsername, setUsedUsername] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n    async function logOut(e) {\r\n        e.preventDefault();\r\n        await fetch('/api/customer/logout', {\r\n            method: \"DELETE\"\r\n        });\r\n        window.location.reload(false);\r\n    }\r\n    function editProfile() {\r\n        setReadonly(!isReadonly);\r\n        setForm({avatar: customer.avatar})\r\n    }\r\n\r\n    // PROFILE FORM AND SUBMISSION\r\n    const [form, setForm] = useState({\r\n        avatar: \"\",\r\n        username: \"\",\r\n        name: \"\",\r\n        surname: \"\"\r\n    });\r\n\r\n    // These methods will update the state properties.\r\n    async function loadAvatar(img) {\r\n        //load the avatar, first store it in formdata\r\n        var data = new FormData();\r\n        if (!img) return console.log('no images');\r\n        for (let i = 0; i < img.length; i++) {\r\n            data.append('imgs', img[i]);\r\n        }\r\n\r\n        //load the new avatar and return it\r\n        var imgString = await axios.post(\"/api/imgs/upload\", data, {})\r\n        return (imgString.data[0]);\r\n    }\r\n\r\n    function updateForm(value) {\r\n        return setForm((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n    useEffect(() => {\r\n\r\n        setForm({ username: customer.username, name: customer.name, surname: customer.surname, avatar: customer.avatar });\r\n\r\n    }, [customer])\r\n\r\n    // This function will handle the submission.\r\n    async function saveProfile(e) {\r\n        e.preventDefault();\r\n\r\n        // When a post request is sent to the create url, we'll add a new record to the database.\r\n        const updatedCustomer = { ...form };\r\n\r\n        await fetch('/api/customer/update', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(updatedCustomer),\r\n        })\r\n            .then(async response => {\r\n                var data = await response.json();\r\n                var answer = handle(data)\r\n                if (answer.command === 'displayErr') {\r\n                    if (answer.msg === 'banned') {\r\n                        alert('you have been banned');\r\n                        window.location.reload(false);\r\n                    }\r\n                    if (answer.msg === 'usernameAlreadyInUse') {\r\n                        setUsedUsername(true);\r\n                    }\r\n\r\n                } else if (answer === 'loggedOut') {\r\n                    window.location.reload(false);\r\n                } else {\r\n                    //delete old avatar if it existed\r\n                    if (customer.avatar) axios.delete('/api/imgs/' + customer.avatar, {}, {});\r\n                    updateCustomer(answer);\r\n                    setForm({ username: customer.username, name: customer.name, surname: customer.surname, avatar: customer.avatar });\r\n                    setReadonly(true);\r\n\r\n                }\r\n\r\n            })\r\n            /*.then(data => {\r\n              console.log('Success:', data);\r\n              \r\n            })*/\r\n            .catch((error) => {\r\n                handle(error);\r\n            });\r\n\r\n\r\n\r\n    }\r\n\r\n    // PASSWORD FORM AND SUBMISSION\r\n    const [passForm, setPassForm] = useState({\r\n        oldPassword: '',\r\n        newPassword: ''\r\n    });\r\n\r\n    // These methods will update the state properties.\r\n    function updatePassForm(value) {\r\n        return setPassForm((prev) => {\r\n            return { ...prev, ...value };\r\n        });\r\n    }\r\n    // This function will handle the submission.\r\n    async function updatePassword(e) {\r\n        e.preventDefault();\r\n\r\n        // When a post request is sent to the create url, we'll add a new record to the database.\r\n        const passwords = { ...passForm };\r\n\r\n        await fetch('/api/customer/updatePassword', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(passwords),\r\n        })\r\n            .then(async response => {\r\n                var data = await response.json();\r\n                var answer = handle(data)\r\n                if (answer.command === 'displayErr') {\r\n                    if (answer.msg === 'banned') {\r\n                        alert('you have been banned');\r\n                        window.location.reload(false);\r\n                    }\r\n                    if (answer.msg === 'samePass') {\r\n                        setSamePassword(true);\r\n                        setWrongPassword(false);\r\n                        setPassForm({ oldPassword: '', newPassword: '' });\r\n                    } if (answer.msg === 'wrongPass') {\r\n                        setSamePassword(false);\r\n                        setWrongPassword(true);\r\n                        setPassForm({ oldPassword: '', newPassword: '' });\r\n                    }\r\n\r\n                } else {\r\n                    window.location.reload(false);\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n            })\r\n            /*.then(data => {\r\n              console.log('Success:', data);\r\n              \r\n            })*/\r\n            .catch((error) => {\r\n                handle(error);\r\n            });\r\n        setReadonly(true);\r\n\r\n    }\r\n    return (\r\n\r\n        <>\r\n            <div className=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\r\n                <div className=\"row nolonoloFullWidth p-3\">\r\n                    <div className=\"col d-flex justify-content-end\">\r\n                        <button className=\"btn nolonoloYellowBackground nolonoloWhiteText\" onClick={logOut}>LOG OUT</button>\r\n                    </div>\r\n                </div>\r\n                <form id=\"profileForm\" onSubmit={saveProfile} className='d-flex flex-column'>\r\n                    <div class=\"container m-0 p-0 avatarDiv\">\r\n                        <img src={\"/api/imgs/\" + form.avatar} alt=\"avatar\" className='avatarImg' />\r\n                    </div>\r\n                    <div className=\"row nolonoloFullWidth p-2 justify-content-center\">\r\n                        <div className=\"col-6\">\r\n                            <div className=\"mb-3 row\">\r\n                                <div className=\"col-6 d-flex justify-content-end\">\r\n                                    {!isReadonly && <label htmlFor=\"customer-avatar\" className=\"nolonoloBoldText\">Avatar</label>}\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    {!isReadonly && <input\r\n                                        type=\"file\"\r\n                                        className=\"form-control\"\r\n                                        id=\"customer-avatar\"\r\n                                        onChange={async (e) => updateForm({ avatar: await loadAvatar(e.target.files) })}\r\n                                    />}\r\n                                    {!isReadonly && <p>Changing the username will log you out</p>}\r\n                                    {usedUsername && <p className=\"nolonoloYellowText\">Username already in use</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3 row\">\r\n                                <div className=\"col-6 d-flex justify-content-end\">\r\n                                    <label htmlFor=\"customer-username\" className=\"nolonoloBoldText\">Username</label>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        readOnly={isReadonly ? true : false}\r\n                                        className=\"form-control\"\r\n                                        id=\"customer-username\"\r\n                                        value={form.username}\r\n                                        onChange={(e) => updateForm({ username: e.target.value })}\r\n                                    />\r\n                                    {!isReadonly && <p>Changing the username will log you out</p>}\r\n                                    {usedUsername && <p className=\"nolonoloYellowText\">Username already in use</p>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3 row\">\r\n                                <div className=\"col-6 d-flex justify-content-end\">\r\n                                    <label htmlFor=\"customer-name\" className=\"nolonoloBoldText\">Name</label>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        readOnly={isReadonly ? true : false}\r\n                                        className=\"form-control\"\r\n                                        id=\"customer-name\"\r\n                                        value={form.name}\r\n                                        onChange={(e) => updateForm({ name: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3 row\">\r\n                                <div className=\"col-6 d-flex justify-content-end\">\r\n                                    <label htmlFor=\"customer-surname\" className=\"nolonoloBoldText\">Surname</label>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        readOnly={isReadonly ? true : false}\r\n                                        className=\"form-control\"\r\n                                        id=\"customer-surname\"\r\n                                        value={form.surname}\r\n                                        onChange={(e) => updateForm({ surname: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mb-3 row\">\r\n                                <div className=\"col-6 d-flex justify-content-end\">\r\n                                    <label htmlFor=\"customer-password\" className=\"nolonoloBoldText\">Password</label>\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" readOnly className=\"form-control\" id=\"customer-password\" defaultValue=\"&#8226;&#8226;&#8226;&#8226;\" />\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    {!isReadonly && <button className=\"btn nolonoloBackgroundNavSecond nolonoloWhiteText\" id=\"editcustomerPasswordBtn\" data-bs-toggle=\"modal\" data-bs-target=\"#changePasswordModal\"> CHANGE PASSWORD </button>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-3 row justify-content-center\">\r\n                            <div className=\"col-3 d-flex justify-content-center\">\r\n                                <button type='button' className=\"btn nolonoloBackgroundNavSecond nolonoloWhiteText me-2\" id=\"editcustomerBtn\" onClick={editProfile} > EDIT </button>\r\n                                {!isReadonly && <button className=\"btn nolonoloBackgroundNavSecond nolonoloWhiteText ms-2\" id=\"savecustomerBtn\" type=\"submit\"> SAVE </button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"modal fade\" id=\"changePasswordModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header flex-column\">\r\n                            <h5 className=\"modal-title nolonoloFullWidth nolonoloBoldText\" id=\"exampleModalLabel\">Change your Password</h5>\r\n                            <p className=\"nolonoloFullWidth\" >Please note that after you change your password you will be logged out</p>\r\n                        </div>\r\n                        <form id=\"passwordForm\" onSubmit={updatePassword}>\r\n                            <div className=\"modal-body\">\r\n                                <label htmlFor=\"oldPassword\" className=\"nolonoloBoldText\">Old password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    id=\"oldPassword\"\r\n                                    defaultValue={passForm.oldPassword}\r\n                                    onChange={(e) => updatePassForm({ oldPassword: e.target.value })}\r\n                                />\r\n                                {wrongPassword && <p className='nolonoloYellowText'>Incorrect password</p>}\r\n                                <label htmlFor=\"newPassword\" className=\"nolonoloBoldText\">New password</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    id=\"newPassword\"\r\n                                    defaultValue={passForm.newPassword}\r\n                                    onChange={(e) => updatePassForm({ newPassword: e.target.value })}\r\n                                />\r\n                                {samePassword && <p className='nolonoloYellowText'>The new password can't be same as the old password</p>}\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                                <button type=\"submit\" className=\"btn nolonoloWhiteText nolonoloYellowBackground\">Save changes</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nimport {handle} from './../errHandler';\r\n\r\nconst Login = () => {\r\n    const [form, setForm] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n      });\r\n      const navigate = useNavigate();\r\n      function updateForm(value) {\r\n        return setForm((prev) => {\r\n          return { ...prev, ...value };\r\n        });\r\n      }\r\n      async function onSubmit(e) {\r\n      e.preventDefault();\r\n        // When a post request is sent to the create url, we'll add a new record to the database.\r\n        const customer = { ...form };\r\n        await fetch('/api/customer/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(customer),\r\n        })\r\n        .then(response => {\r\n          console.log('\\n\\n\\t\\tRESPONSE\\n\\n')\r\n          console.log(response.json());\r\n        })\r\n        .catch((error) => {\r\n          handle(error);\r\n        });\r\n\r\n        setForm({username: \"\", password: \"\" });\r\n        \r\n        window.location.reload(false);\r\n        \r\n      }\r\n      \r\n    return (\r\n        <div className=\"col d-flex justify-content-center\">\r\n            <div className=\"row nolonoloFullWidth mb-5 mt-3\">\r\n                <div className=\"col-12 d-flex justify-content-center\">\r\n                    <h2>Login</h2>\r\n                </div>\r\n                <div className=\"col-12 d-flex justify-content-center\">\r\n                    <form id=\"logForm\" onSubmit={onSubmit}>\r\n                        <div>\r\n                            <label className=\"form-label\" htmlFor=\"logUsername\">Username</label>\r\n                            <input \r\n                                className=\"form-control\" \r\n                                type=\"text\" \r\n                                id=\"logUsername\" \r\n                                name=\"username\"\r\n                                value={form.username}\r\n                                onChange={(e) => updateForm({ username: e.target.value })} \r\n                                required \r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"form-label\" htmlFor=\"logPassword\">Password</label>\r\n                            <input \r\n                                className=\"form-control\" \r\n                                type=\"password\" \r\n                                name=\"password\" \r\n                                id=\"logPassword\"\r\n                                value={form.password}\r\n                                onChange={(e) => updateForm({ password: e.target.value })} \r\n                                required \r\n                            />\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                            <button className=\"btn btn-warning\" type=\"submit\">Login</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from \"react\";\r\nimport {handle} from './../errHandler';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nconst Register = () => {\r\n    const [show, setShow] = useState(false);\r\n    const [form, setForm] = useState({\r\n        avatar: \"\",\r\n        username: \"\",\r\n        name: \"\",\r\n        surname: \"\",\r\n        password: \"\"\r\n      });\r\n\r\n      // These methods will update the state properties.\r\n      function updateForm(value) {\r\n        return setForm((prev) => {\r\n          return { ...prev, ...value };\r\n        });\r\n      }\r\n      // This function will handle the submission.\r\n      async function onSubmit(e) {\r\n        e.preventDefault();\r\n      \r\n        // When a post request is sent to the create url, we'll add a new record to the database.\r\n        const newCustomer = { ...form };\r\n        \r\n        await fetch('/api/customer/reg', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(newCustomer),\r\n        })\r\n        .then(response => {\r\n          response.json();\r\n        })\r\n        /*.then(data => {\r\n          console.log('Success:', data);\r\n          \r\n        })*/\r\n        .catch((error) => {\r\n          handle(error);\r\n        });\r\n        setShow(true);\r\n        setForm({ avatar: \"\", username: \"\", name: \"\", surname: \"\", password: \"\" });\r\n        \r\n      }\r\n      // This following section will display the form that takes the input from the user.\r\n      return (\r\n          <>\r\n          <Toast show={show} onClose={() => setShow(false)} autohide>\r\n                  <Toast.Header>\r\n                    <strong className=\"me-auto\">NolonoloPlus</strong>\r\n                  </Toast.Header>\r\n                <Toast.Body>You are now registered. Please log in</Toast.Body>\r\n              </Toast>\r\n                <div className=\"row nolonoloFullWidth \">\r\n\r\n                    <div className=\"col d-flex justify-content-center border-end border-2\">\r\n                        <div className=\"row nolonoloFullWidth mb-5 mt-3\">\r\n                            <div className=\"col-12 d-flex justify-content-center\">\r\n                                <h2>Register</h2>\r\n                            </div>\r\n                            <div className=\"col-12 d-flex justify-content-center\">\r\n                                <form id=\"regForm\" onSubmit={onSubmit}>\r\n                                    <div>\r\n                                        <label className=\"form-label\" htmlFor=\"username\">Choose a username</label>\r\n                                        <input \r\n                                            className=\"form-control\" \r\n                                            type=\"text\" \r\n                                            id=\"username\" \r\n                                            name=\"username\" \r\n                                            value={form.username}  \r\n                                            onChange={(e) => updateForm({ username: e.target.value })}\r\n                                            required \r\n                                            />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label className=\"form-label\" htmlFor=\"name\">Your name</label>\r\n                                        <input \r\n                                            className=\"form-control\" \r\n                                            type=\"text\" \r\n                                            id=\"name\" \r\n                                            name=\"name\"\r\n                                            value={form.name}  \r\n                                            onChange={(e) => updateForm({ name: e.target.value })} \r\n                                            required \r\n                                            />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label className=\"form-label\" htmlFor=\"surname\">Your surname</label>\r\n                                        <input \r\n                                            className=\"form-control\" \r\n                                            type=\"text\" \r\n                                            id=\"surname\" \r\n                                            name=\"surname\"\r\n                                            value={form.surname}  \r\n                                            onChange={(e) => updateForm({ surname: e.target.value })}\r\n                                            required \r\n                                            />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label className=\"form-label\" htmlFor=\"password\">Password</label>\r\n                                        <input \r\n                                            className=\"form-control\" \r\n                                            type=\"password\" \r\n                                            id=\"password\" \r\n                                            name=\"password\"\r\n                                            value={form.password}  \r\n                                            onChange={(e) => updateForm({ password: e.target.value })}\r\n                                            required \r\n                                            />\r\n                                    </div>\r\n                                    <div className=\"mt-2\">\r\n                                        <button className=\"btn btn-warning\" type=\"submit\">Register</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n          </>\r\n      );\r\n     }\r\n\r\nexport default Register","import React, { useState } from 'react'\r\nimport Login from './Login'\r\nimport Register from './Register'\r\n\r\nconst LoginOrRegister = () => {\r\n\r\n    return (\r\n        <div className=\"tab-pane fade\" id=\"nav-login\" role=\"tabpanel\" aria-labelledby=\"nav-login-tab\">\r\n            <Register />\r\n            <Login />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginOrRegister\r\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from './components/Navbar'\nimport Store from './components/Store'\nimport Rentals from './components/Rentals'\nimport Profile from './components/Profile'\nimport LoginOrRegister from \"./components/LoginOrRegister\";\n\nimport {handle} from './errHandler';\n\n\nconst App = () => {\n\n  \n  const [isLogged, setisLogged ] = useState(false);\n  const [customer, setCustomer] = useState({});\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      const res = await fetch ('/api/customer/isLogged');\n      const data = await res.json()\n      var answer = handle(data);\n      if (answer) {\n        if (answer.command === 'displayErr') { return alert(answer.msg) }\n        if (answer !== 'notLogged') {\n          setisLogged(true);\n          setCustomer(answer);\n        }\n      }\n    }\n    checkLogin();\n  }, [])\n const updateCustomer = (newCustomer) => {\n    setCustomer(newCustomer);\n  }\n  return (\n      <div className='container-fluid p-0 nolonoloFullWidth'>\n        <Navbar isLogged={isLogged}/>\n        <div id=\"pageContent\" className=\"container-fluid nolonoloFullWidth m-0 p-0\">\n          <div className=\"tab-content\" id=\"nav-tabContent\">\n            <Store isLogged={isLogged}/>\n            {isLogged && <Rentals/>} \n            {isLogged && <Profile customer={customer} updateCustomer = {updateCustomer}/>}\n            {!isLogged && <LoginOrRegister/>}\n          </div>\n        </div>\n      </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './nolostrap/nolostrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}